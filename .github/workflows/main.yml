# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#   Build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [14.x]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#          node-version: ${{ matrix.node-version }}
#       - run: npm ci

#       - name: Compile
#         run: echo Hello, world!

  DeployDev:
    name: Deploy to Dev 
    if: github.event_name == 'pull_request'
#     needs: [Build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    environment: 
      name: Dev
#       url: 'http://dev.myapp.com'
    env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
         node-version: ${{ matrix.node-version }}
      - run: pwd 
      - run: cd site
      - run: pwd
      - run: npm i
      - run: npx serverless deploy --stage dev


  DeployTest:
    name: Deploy to Test 
    if: github.event.ref == 'refs/heads/main'
#     needs: [Build]
    runs-on: ubuntu-latest
    environment: 
      name: Test
#       url: 'http://test.myapp.com'
    steps:
      - name: Deploy
        run: sls deploy --stage test

  DeployProd:
    name: Deploy to Production 
    needs: [DeployTest]
    runs-on: ubuntu-latest
    environment: 
      name: Prod
#       url: 'http://www.myapp.com'
    steps:
      - name: Deploy
        run: sls deploy --stage prod
